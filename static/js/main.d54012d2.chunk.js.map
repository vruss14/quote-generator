{"version":3,"sources":["components/Container.js","App.js","index.js"],"names":["Container","props","colors","quotes","words","author","randomColor","Math","floor","random","length","randomQuote","useState","bkgrndColor","displayedQuote","state","setState","styles","backgroundColor","outline","className","style","id","title","target","rel","href","xmlns","width","height","fill","viewBox","d","onClick","changeContent","newColor","newQuote","type","App","ReactDOM","render","document","getElementById"],"mappings":"gOAuGeA,MArGf,SAAmBC,GAEjB,IAAMC,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAE5EC,EAAS,CACb,CACEC,MAAO,wFACPC,OAAQ,wBAGV,CACED,MAAO,2EACPC,OAAQ,4BAGV,CACED,MAAO,8FACPC,OAAQ,yBAGV,CACED,MAAO,kDACPC,OAAQ,kCAGV,CACED,MAAO,2FACPC,OAAQ,gCAIRC,EAAcJ,EAAOK,KAAKC,MAAMD,KAAKE,SAAWP,EAAOQ,SACvDC,EAAcR,EAAOI,KAAKC,MAAMD,KAAKE,SAAWN,EAAOO,SAE3D,EAA0BE,mBAAS,CACjCC,YAAaP,EACbQ,eAAgBH,IAFlB,mBAAOI,EAAP,KAAcC,EAAd,KA2BMC,EAAS,CACbC,gBAAiBH,EAAMF,YACvBM,QAAQ,aAAD,OAAeJ,EAAMF,cAG9B,OACI,sBAAMO,UAAU,8GAA8GC,MAAOJ,EAArI,SACE,qBAAKG,UAAU,cAAcE,GAAG,YAAhC,SACE,sBAAKF,UAAU,oFAAf,UACI,sBAAKA,UAAU,UAAf,UACI,qBAAKA,UAAU,kBAAf,SACI,mBAAGA,UAAU,gBAAgBE,GAAG,OAAhC,SACIP,EAAMD,eAAeV,UAG7B,mBAAGgB,UAAU,yCAAyCE,GAAG,SAAzD,SAAmEP,EAAMD,eAAeT,YAG5F,sBAAKe,UAAU,+DAAf,UACA,qBAAKG,MAAM,oBAAoBH,UAAU,mDAAmDE,GAAG,iBAA/F,SACE,mBAAGA,GAAG,cAAcE,OAAO,SAASC,IAAI,aAAaC,KAAK,mCAA1D,SACE,qBAAKC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,KAAK,eAAeV,UAAU,gBAAgBW,QAAQ,YAArH,SACI,sBAAMC,EAAE,wfAIhB,wBACAT,MAAM,yBACNU,QAlDZ,SAASC,IAIP,IAAIC,EAAWjC,EAAOK,KAAKC,MAAMD,KAAKE,SAAWP,EAAOQ,SACpD0B,EAAWjC,EAAOI,KAAKC,MAAMD,KAAKE,SAAWN,EAAOO,SAErDyB,IAAapB,EAAMF,aAKnBuB,EAAShC,QAAUW,EAAMD,eAAeV,MAK3CY,EAAS,CAACH,YAAasB,EAAUrB,eAAgBsB,IAT/CF,KA2CQG,KAAK,SACLjB,UAAU,0CACVE,GAAG,YACHD,MAAOJ,EANP,kC,MChFCqB,MANf,WACE,OACE,cAAC,EAAD,KCCJC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d54012d2.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Container(props) {\n  // Color Scheme ideas found here: https://digitalsynopsis.com/design/minimal-web-color-palettes-combination-hex-code/\n  const colors = ['#F67280', '#C06C84', '#6C5B7B', '#355C7D', '#2A363B', '#474747', '#45ADA8' ];\n\n  const quotes = [\n    {\n      words: '\"Spread love everywhere you go. Let no one ever come to you without leaving happier.\"',\n      author: '— Mother Teresa'\n    },\n\n    {\n      words: '\"The future belongs to those who believe in the beauty of their dreams.\"',\n      author: '— Eleanor Roosevelt'\n    },\n\n    {\n      words: '\"The greatest glory in living lies not in never falling, but in rising every time we fall.\"',\n      author: '— Nelson Mandela'\n    },\n\n    {\n      words: '\"Life itself is the most wonderful fairy tale.\"',\n      author: '— Hans Christian Andersen'\n    },\n\n    {\n      words: '\"Success is not final; failure is not fatal: It is the courage to continue that counts.\"',\n      author: '— Winston S. Churchill'\n    },\n  ]\n  \n  let randomColor = colors[Math.floor(Math.random() * colors.length)];\n  let randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\n\n  const [state, setState] = useState({\n    bkgrndColor: randomColor,\n    displayedQuote: randomQuote\n  });\n\n  function changeContent() {\n    // There is a chance that the random function will choose the same color or quote as the current state\n    // An extra step of verification ensures new content with each click event\n\n    let newColor = colors[Math.floor(Math.random() * colors.length)];\n    let newQuote = quotes[Math.floor(Math.random() * quotes.length)];\n\n    if(newColor === state.bkgrndColor) {\n      changeContent();\n      return;\n    }\n\n    if(newQuote.words === state.displayedQuote.words) {\n      changeContent();\n      return;\n    }\n\n    setState({bkgrndColor: newColor, displayedQuote: newQuote});\n    return;\n\n  }\n\n  const styles = {\n    backgroundColor: state.bkgrndColor,\n    outline: `2px solid ${state.bkgrndColor}`\n  }\n\n  return (\n      <main className=\"container container-fluid d-flex min-vw-100 min-vh-100 justify-content-center align-items-center text-white\" style={styles}>\n        <div className=\"d-flex card\" id=\"quote-box\">\n          <div className=\"card-body text-black d-flex flex-column justify-content-center align-items-center\">\n              <div className=\"row p-4\">\n                  <div className=\"quote-container\">\n                      <p className=\"fs-4 fw-light\" id=\"text\">\n                         {state.displayedQuote.words}\n                      </p>\n                  </div>\n                  <p className=\"text-black text-end pl-3 fs-5 fw-light\" id=\"author\">{state.displayedQuote.author}</p>\n              </div>\n\n              <div className=\"d-flex flex-row mb-3 w-100 justify-content-around text-black\">\n              <div title=\"Tweet this quote!\" className=\"d-flex justify-content-center align-items-center\" id=\"icon-container\">\n                <a id=\"tweet-quote\" target=\"_blank\" rel=\"noreferrer\" href=\"https://twitter.com/intent/tweet\">\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" fill=\"currentColor\" className=\"bi bi-twitter\" viewBox=\"0 0 16 16\">\n                      <path d=\"M5.026 15c6.038 0 9.341-5.003 9.341-9.334 0-.14 0-.282-.006-.422A6.685 6.685 0 0 0 16 3.542a6.658 6.658 0 0 1-1.889.518 3.301 3.301 0 0 0 1.447-1.817 6.533 6.533 0 0 1-2.087.793A3.286 3.286 0 0 0 7.875 6.03a9.325 9.325 0 0 1-6.767-3.429 3.289 3.289 0 0 0 1.018 4.382A3.323 3.323 0 0 1 .64 6.575v.045a3.288 3.288 0 0 0 2.632 3.218 3.203 3.203 0 0 1-.865.115 3.23 3.23 0 0 1-.614-.057 3.283 3.283 0 0 0 3.067 2.277A6.588 6.588 0 0 1 .78 13.58a6.32 6.32 0 0 1-.78-.045A9.344 9.344 0 0 0 5.026 15z\"/>\n                  </svg>\n                </a>\n              </div>\n              <button \n              title=\"Click for a new quote!\" \n              onClick={changeContent}\n              type=\"button\" \n              className=\"btn quote-btn text-white align-self-end\"\n              id=\"new-quote\" \n              style={styles}>New Quote</button>\n          </div>\n        </div>\n    </div>\n      </main>\n  );\n}\n\nexport default Container;","import Container from './components/Container';\nimport './App.css'; \n\nfunction App() {\n  return (\n    <Container />\n  );\n}\n\nexport default App;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}